<!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-C1TE3Z1609"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-C1TE3Z1609');
</script>

<!-- Facebook Pixel Code -->
<script>
  !function(f,b,e,v,n,t,s)
  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
  n.callMethod.apply(n,arguments):n.queue.push(arguments)};
  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
  n.queue=[];t=b.createElement(e);t.async=!0;
  t.src=v;s=b.getElementsByTagName(e)[0];
  s.parentNode.insertBefore(t,s)}(window, document,'script',
  'https://connect.facebook.net/en_US/fbevents.js');
  fbq('init', '381682776199668');
  fbq('track', 'PageView');
</script>
<noscript><img height="1" width="1" style="display:none"
  src="https://www.facebook.com/tr?id=381682776199668&ev=PageView&noscript=1"
/></noscript>
<!-- End Facebook Pixel Code -->


/**
 * 
 * cd /etc/nginx/sites-available
sudo nano simpleServer
Inside this file write this piece of code:


server {
    listen 80;
    server_name www.highnlow.it highnlow.it;
    location / {
        proxy_pass https:/www.highnlow.it/;
    }
}


// FOR HTTPS

server {
  listen       443 ssl;
  listen       80;
  server_name  www.highnlow.it highnlow.it;

  ssl_certificate   /etc/letsencrypt/live/highnlow.it/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/highnlow.it/privkey.pem;

  location / {
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }
}

CERTIFICATE CHAIN
/etc/letsencrypt/live/highnlow.it/fullchain.pem
KEY FILE
/etc/letsencrypt/live/highnlow.it/privkey.pem

EXPIRE: 10/24/2021


If you have your domain set up, you can do this.
# ...
server_name www.example.com example.com;
# ...
More information can be found in Nginx documentation.




Final steps
# check if your configuration is ok
sudo nginx -t
# enable your configuration
sudo ln -s /etc/nginx/sites-available/simpleServer /etc/nginx/sites-enabled
# restart nginx
sudo systemctl restart nginx


 */

TODO
 IMG FORMAZIONE  --- 
 FROMAZIONE -> ARTICOLI ---
IDEE TOGLIERE PUNTO  --- 
PARTNER   --- 
ETORO IMG ONLINE  ---  
BANNER  ---  
CHECK ALL HEAD AND FOOTER  ---  
COOCKIE
MAIL  ---
REGISTRAZIONE POST ---
API PER HOME // LAST 3 IDEA & ARTICLE  --- 
TELEGRAM  ---  
LOGO AND ICON -- - - 
ADD GALLERY IN IDEA
https  --- 
aNALISTICS ---
MINIFI TEXT
FB PAGE ---
PB PIXEL ----
CHECK FOR PROMO FORM FIVERR
privacy PAGE// fb 



Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/highnlow.it.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not due for renewal, but simulating renewal for dry run
Plugins selected: Authenticator nginx, Installer nginx
Renewing an existing certificate
Performing the following challenges:
http-01 challenge for highnlow.it
http-01 challenge for www.highnlow.it
Waiting for verification...
Cleaning up challenges

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
new certificate deployed with reload of nginx server; fullchain is
/etc/letsencrypt/live/highnlow.it/fullchain.pem
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates below have not been saved.)

Congratulations, all renewals succeeded. The following certs have been renewed:
  /etc/letsencrypt/live/highnlow.it/fullchain.pem (success)
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates above have not been saved.)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IMPORTANT NOTES:
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
